{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2430000\n",
      "2430000\n",
      "0\n",
      "900\n",
      "0\n",
      "900\n",
      "2430000\n",
      "2430000\n",
      "0\n",
      "900\n",
      "0\n",
      "900\n",
      "2430000\n",
      "2430000\n",
      "0\n",
      "900\n",
      "0\n",
      "900\n",
      "2430000\n",
      "2430000\n",
      "0\n",
      "900\n",
      "0\n",
      "900\n",
      "2430000\n",
      "2430000\n",
      "0\n",
      "900\n",
      "0\n",
      "900\n"
     ]
    }
   ],
   "source": [
    "import cv2\n",
    "import zipfile\n",
    "import cv2\n",
    "import numpy as np\n",
    "import glob\n",
    "import os\n",
    "\n",
    "from numpy._distributor_init import filename\n",
    "\n",
    "\n",
    "# imagens \n",
    "images_path = glob.glob(\"./images/*.*\")\n",
    "\n",
    "    \n",
    "    #localização logo\n",
    "for img_path in images_path:\n",
    "    img = cv2.imread(img_path)\n",
    "    catalog = cv2.imread('./images/catalog.jpg')\n",
    "    watermark = cv2.imread(\"./images/logo.jpg\")\n",
    "\n",
    "    percent_of_scaling = 100\n",
    "\n",
    "    new_width = int(img.shape[1] * percent_of_scaling/100)\n",
    "\n",
    "    new_height = int(img.shape[0] * percent_of_scaling/100)\n",
    "\n",
    "    new_dim = (new_width, new_height)\n",
    "\n",
    "    resized_img = cv2.resize(img, new_dim, interpolation=cv2.INTER_AREA)\n",
    "\n",
    "    resized_cat = cv2.resize(catalog, new_dim, interpolation=cv2.INTER_AREA)\n",
    "\n",
    "    resized_wm = cv2.resize(watermark, new_dim, interpolation=cv2.INTER_AREA)\n",
    "\n",
    "    catalog = cv2.resize(resized_cat,(250,100), interpolation=cv2.INTER_AREA)\n",
    "    resized_img = cv2.resize(resized_img,(900,900),interpolation=cv2.INTER_AREA)\n",
    "    resized_wm = cv2.resize(resized_wm, (900,900), interpolation=cv2.INTER_AREA)\n",
    "\n",
    "    h_img, w_img, _ = resized_img.shape\n",
    "\n",
    "    center_y = int(h_img/2)\n",
    "\n",
    "    center_x = int(w_img/2)\n",
    "\n",
    "    h_wm, w_wm, _ = resized_wm.shape\n",
    "\n",
    "    top_y = center_y - int(h_wm/2)\n",
    "\n",
    "    left_x = center_x - int(w_wm/2)\n",
    "\n",
    "    bottom_y = top_y + h_wm\n",
    "\n",
    "    right_x = left_x + w_wm\n",
    "\n",
    "\n",
    "    hc = h_img - 100\n",
    "    bc = h_img\n",
    "    lc = 0\n",
    "    rc = 250\n",
    "\n",
    "    roi = resized_img[top_y:bottom_y, left_x:right_x]\n",
    "    roi1 = resized_img[hc:bc,lc:rc]\n",
    "    print(roi.size)\n",
    "    print(resized_wm.size)\n",
    "    catalog = cv2.addWeighted(roi1, 1, catalog, 0.15, 0)\n",
    "    result = cv2.addWeighted(roi, 1, resized_wm, 0.15, 0)\n",
    "    print(top_y)\n",
    "    print(bottom_y)\n",
    "    print(left_x)\n",
    "    print(right_x)\n",
    "    resized_img[top_y:bottom_y, left_x:right_x] = result\n",
    "    resized_img[hc:bc,lc:rc] = catalog\n",
    "\n",
    "    filename= os.path.basename(img_path)\n",
    "\n",
    "    cv2.imwrite(\"images_marcadagua/\" + filename, resized_img)\n",
    "    zf = zipfile.ZipFile(\"images.zip\", \"w\")\n",
    "for dirname, subdirs, files in os.walk(\"images_marcadagua\"):\n",
    "    zf.write(dirname)\n",
    "    for filename in files:\n",
    "        zf.write(os.path.join(dirname, filename))\n",
    "    zf.close()\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.10.5 64-bit (windows store)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.5"
  },
  "orig_nbformat": 4,
  "vscode": {
   "interpreter": {
    "hash": "4fc9e0f7fda6286a45ec44148dada5815625b8f7c97d660006da5f84ed3e7e6f"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
